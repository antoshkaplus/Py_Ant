import sysimport Tkinter as tkfrom model import Modelfrom panel import Panelfrom illustration import Illustrationfrom controls import MainMenuclass AboutDialog(tk.Toplevel):  def __init__(self,master=None,**options):    tk.Toplevel.__init__(self,master,**options)        problem = ("Given a system of Bob of mass m, connected with "+               "weightless rigid, elastically attached Beam of length 2L. "+               "One end of Beam attached to Joint, located on immovable "+               "support. Beam is based on Spring of stiffness c0. "+               "At initial time t=0 there is a vertical stroke on Bob of "+                "instant boost S. Then, swing of system describe by equation:\n\n"+               "4*(m*(x''))+c0*x=0, x(0)=0, x'(0)=S/(2*m*L),\n\n"+               "where x - angle of system deflection from equilibrium. If x is "+               "more than:\n\n"+               "x_max=S/(sqrt(c0*m*L)),\n\n"+               "the system crushes. Here is animated illustration of model.")    tk.Label(self,text=problem,wraplength=400,padx=10,pady=10,justify=tk.LEFT).pack(expand=tk.YES)        tk.Label(self,text="Author: Anton Logunov",pady=10).pack(expand=tk.YES)    tk.Button(self,text="Ok",command=self.destroy,width=10,pady=10).pack(expand=tk.YES)        class Application(tk.Toplevel):    def __init__(self,master=None,**options):    tk.Toplevel.__init__(self,master,**options)    self.title("MathModel")        model = Model(self)        self.create_main_menu()        panel = Panel(self,model)    panel.pack(fill=tk.Y,side=tk.RIGHT,anchor=tk.E)    model.add_observer(panel)        illustr = Illustration(self)    illustr.pack(expand=tk.YES,fill=tk.BOTH,side=tk.LEFT,anchor=tk.W)    model.add_observer(illustr)      def create_main_menu(self):    elements = [("File",[("Exit",lambda: sys.exit(0))]),("Help",[("About",lambda: AboutDialog(self))])]    self.config(menu=MainMenu(self,elements))        if __name__ == "__main__":  root = tk.Tk()  root.withdraw()  Application(root)  root.mainloop()  