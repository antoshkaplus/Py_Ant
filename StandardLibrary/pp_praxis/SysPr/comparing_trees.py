from os.path import join, isdir, isfile from os import listdirdef same_file_contents(path1,path2,buffer_size=-1):  if not(isfile(path1) and isfile(path2)):    raise RuntimeError("Wrong path!")    with open(path1,"rb") as f1, open(path2,"rb") as f2:    same = False    while True:      str1 = f1.read(buffer_size)      str2 = f2.read(buffer_size)      if str1 != str2:         break      if str1 == "":         same = True        break          return same        def intersection(list1,list2):  """  returns tuple of three: list1 unique names,  same names and list2 unique names  """    l1,l2,l3 = [],[],list(list2)  for i1 in list1:    for i2 in list2:        if i1 == i2:        l2.append(i1)        l3.remove(i1)        break    else: l1.append(i1)  return l1,l2,l3          def compare_trees(dir1,dir2,buffer_size=-1):  """  returns 2 tuples (files,dirs)   first tuple represent unique files and dirs  of first directory argument and second - of   second directory argument  """    files_unique1 = []  dirs_unique1 = []    files_unique2 = []  dirs_unique2 = []    def extend_res((f1,d1),(f2,d2)):     files_unique1.extend(f1); dirs_unique1.extend(d1)    files_unique2.extend(f2); dirs_unique2.extend(d2)      (names_dir1,   names_same,   names_dir2) = intersection(listdir(dir1),                              listdir(dir2))  for name in names_same:    path1 = join(dir1,name)    path2 = join(dir2,name)    if isdir(path1) ^ isdir(path2):       # different types      if isdir(path1):        l1,l2 = dirs_unique1,files_unique2      else:        l1,l2 = files_unique1,dirs_unique2      l1.append(path1)      l2.append(path2)    else:      # same types              if isdir(path1):        extend_res(*compare_trees(path1,path2))      elif not same_file_contents(path1,path2,buffer_size):        files_unique1.append(path1)        files_unique2.append(path2)         for name in names_dir1:    path = join(dir1,name)    l = dirs_unique1 if isdir(path) else files_unique1    l.append(path)    for name in names_dir2:    path = join(dir2,name)    l = dirs_unique2 if isdir(path) else files_unique2    l.append(path)      return ((files_unique1,dirs_unique1),          (files_unique2,dirs_unique2))  if __name__ == "__main__":  dir1 = r"C:\Users\antoshkaplus\Documents\NetBeansProjects"  dir2 = r"C:\Users\antoshkaplus\Desktop\Programming\LearningPython\pp_exs\NB"    result = compare_trees(dir1,dir2)    print "dir1 files"  for r in result[0][0]:    print r    print "dir1 dirs"  for r in result[0][1]:    print r    print "\n\n"    print "dir2 files"  for r in result[1][0]:    print r    print "dir2 dirs"  for r in result[1][1]:    print r    